name: Test Product
description: Run the Pester tests for a given product
inputs:
  Thumbprint:
    required: true
    description: "The certificate thumbprint"
  Alias:
    required: true
    description: "The alias of the product being tested"
  TestParams:
    required: true
    description: "The set of parameters used to defined the test"
runs:
  using: "composite"
  steps:
    - run: |
        Import-Module -Name Selenium
        cd repo
        # Read thumbprint from previous step.
        $thumbprint = "${{ inputs.Thumbprint }}"
        $productAlias = "${{ inputs.Alias }}"
        $params = "${{ inputs.TestParams }}"
        # Split into products
        $products = $params.split("|")
        foreach ($product in $products)
        {
          [String]$alias = ""
          [String]$domain = ""
          [String]$display = ""
          [String]$appid = ""
          [String]$productname = ""
          [String]$variant = ""
          [String]$m365 = ""
          $paramsAsHashTable = @{}
          $attributes = $product.split(",")
          foreach ($attribute in $attributes)
          {
            # Split the key from the value
            $keyAndValue = $attribute.split("=")
            $key = $keyAndValue[0]
            $value = $keyAndValue[1]
            if($key.ToLower() -eq "alias")
            {
              $alias = $value
            }
            elseif($key.ToLower() -eq "tenantdomain")
            {
              $domain = $attribute
            }
            elseif($key.ToLower() -eq "tenantdisplayname")
            {
              $display = $attribute
            }
            elseif($key.ToLower() -eq "appid")
            {
              $appid = $attribute
            }
            elseif($key.ToLower() -eq "productname")
            {
              $productname = $attribute
            }
            elseif($key.ToLower() -eq "variant")
            {
              $variant = $attribute
            }
            elseif($key.ToLower() -eq "m365environment")
            {
              $m365 = $attribute
            }
          }
          if($alias -eq $productAlias)
          {
            # Split out the key and value for each parameter
            $domainKeyAndValue = $domain.split("=")
            $displayKeyAndValue = $display.split("=")
            $appidKeyAndValue = $appid.split("=")
            $productnameKeyAndValue = $productname.split("=")
            $variantKeyAndValue = $variant.split("=")
            $m365KeyAndValue =$m365.split("=")
            # Add both to the hash table
            $paramsAsHashTable.Add($domainKeyAndValue[0], $domainKeyAndValue[1])
            $paramsAsHashTable.Add($displayKeyAndValue[0], $displayKeyAndValue[1])
            $paramsAsHashTable.Add($appidKeyAndValue[0], $appidKeyAndValue[1])
            $paramsAsHashTable.Add($productnameKeyAndValue[0], $productnameKeyAndValue[1])
            if($variantKeyAndValue[0] -ne "")
            {
              $paramsAsHashTable.Add($variantKeyAndValue[0], $variantKeyAndValue[1])
            }
            $paramsAsHashTable.Add($m365KeyAndValue[0], $m365KeyAndValue[1])
            # Test the product
            ./Testing/Functional/Products/Tests/CallProductTests.ps1 -params $paramsAsHashTable -thumbprint $thumbprint
          }
        }
      shell: powershell
